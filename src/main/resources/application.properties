app.window.duration=1
app.window.retentionPeriod=60

#logging.level.web=TRACE
#logging.level.org.springframework.web=TRACE
logging.level.org.springframework.kafka=DEBUG

spring.application.name=analytics-streams-example

#spring.kafka.streams.state-dir=./build/analytics-streams-store
#spring.json.trusted.packages=*
#spring.kafka.producer.properties.spring.json.trusted.packages=*
#spring.kafka.consumer.properties.spring.json.trusted.packages=*

# defaults
spring.cloud.stream.kafka.streams.binder.configuration.commit.interval.ms=10000
#spring.cloud.stream.kafka.streams.binder.configuration.listener.missing-topics-fatal=true
#spring.cloud.stream.kafka.streams.binder.auto-create-topics=false
spring.cloud.stream.kafka.streams.binder.configuration.default.deserialization.exception.handler=org.apache.kafka.streams.errors.LogAndContinueExceptionHandler
spring.cloud.stream.kafka.streams.binder.configuration.default.key.serde=org.apache.kafka.common.serialization.Serdes$StringSerde
spring.cloud.stream.kafka.streams.binder.configuration.default.value.serde=org.apache.kafka.common.serialization.Serdes$StringSerde
#spring.cloud.stream.kafka.streams.binder.consumer-properties.spring.json.trusted.packages=com.example.demo.*

# sale out
spring.cloud.stream.bindings.saleOut.destination=sale
spring.cloud.stream.bindings.saleOut.producer.header-mode=headers

# sale in
spring.cloud.stream.bindings.saleIn.destination=sale
spring.cloud.stream.bindings.saleIn.consumer.header-mode=headers
spring.cloud.stream.kafka.streams.bindings.saleIn.consumer.application-id=analytics-sale

# sale counts out
spring.cloud.stream.bindings.salesCountOut.destination=salesCount
spring.cloud.stream.bindings.salesCountOut.content-type=application/json
spring.cloud.stream.bindings.salesCountOut.producer.header-mode=headers
spring.cloud.stream.bindings.salesCountOut.producer.use-native-encoding=false
spring.cloud.stream.kafka.streams.bindings.salesCountOut.producer.key-serde=org.apache.kafka.common.serialization.Serdes$StringSerde
#spring.cloud.stream.kafka.streams.bindings.salesCountOut.producer.value-serde=org.apache.kafka.common.serialization.Serdes$LongSerde
spring.cloud.stream.kafka.streams.bindings.salesCountOut.producer.value-serde=org.springframework.kafka.support.serializer.JsonSerde

# sales counts in
spring.cloud.stream.bindings.salesCountIn.destination=salesCount
spring.cloud.stream.bindings.salesCountIn.group=salesCount-group
spring.cloud.stream.bindings.salesCountIn.content-type=application/json
spring.cloud.stream.bindings.salesCountIn.consumer.use-native-decoding=false
spring.cloud.stream.bindings.salesCountIn.consumer.header-mode=headers
spring.cloud.stream.kafka.streams.bindings.salesCountIn.consumer.application-id=analytics-salesCount
spring.cloud.stream.kafka.streams.bindings.salesCountIn.consumer.key-serde=org.apache.kafka.common.serialization.Serdes$StringSerde
#spring.cloud.stream.kafka.streams.bindings.salesCountIn.consumer.value-serde=org.apache.kafka.common.serialization.Serdes$LongSerde
spring.cloud.stream.kafka.streams.bindings.salesCountIn.consumer.value-serde=org.springframework.kafka.support.serializer.JsonSerde